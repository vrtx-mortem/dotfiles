set -g prefix C-a
bind C-a send-prefix
unbind C-b

set -g default-terminal "screen-256color"
set -g focus-events on
set -g xterm-keys on
set -g mouse off
set -g history-limit 500000

set -g repeat-time 0
set -g escape-time 0

set -g renumber-windows on
set -g set-titles on
set -g set-titles-string '#I:#W'
set -g automatic-rename on
set -g allow-rename on
set -g mode-keys vi
set -g set-clipboard on

color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="colour239"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

status_format="#I:#W #{?window_zoomed_flag,+Z,}"
setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " $status_format "
setw -g window-status-current-style  "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default] $status_format #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=default"

# general status bar settings
set -g status on
set -g status-interval 30
set -g status-position bottom
#set -g status-position top
set -g status-justify left
set -g status-right-length 100
set -g status-left  ""

# Binds
unbind \$   # rename-session
unbind ','  # rename-window
unbind '%'  # split-window -h
unbind '"'  # split-window
unbind '}'  # swap-pane -D
unbind '{'  # swap-pane -U
#unbind '['  # paste-buffer
#unbind ']'
unbind "'"  # select-window
unbind 'n'  # next-window
unbind 'p'  # previous-window
unbind 'l'  # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind 'o'  # focus thru panes
unbind '&'  # kill-window
unbind "#"  # list-buffer
unbind '='  # choose-buffer
unbind 'z'  # zoom-pane
unbind M-Up    # resize 5 rows up
unbind M-Down  # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left  # resize 5 rows left

bind C-r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded"
bind C-s run-shell "tmux send-keys -- \"\$(tmux display -p 'stty cols #{pane_width} rows #{pane_height}')\" Enter"

bind-key -n M-0 select-window -t 0
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

bind 'c' new-window      -c "#{pane_current_path}"
bind '"' split-window    -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"
bind ',' command-prompt  -I '#{window_name}' 'rename-window "%%"'
bind 'z' resize-pane -Z

bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

wg_is_keys_off="#([ $(tmux show-option -qv key-table) = 'off' ] && echo ' |')"

# define widgets we're going to use in status bar
hostinfo="#H"
timeinfo="%H:%M %d-%b"
battinfo="⚡#{battery_percentage}"

set -g status-left ""
set -g status-right "$wg_is_keys_off $battinfo | $hostinfo | $timeinfo"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.config/tmux/plugins/tpm/tpm'
